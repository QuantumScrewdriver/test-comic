{"version":3,"sources":["components/RandImg.js","components/FirstImg.js","App.js","serviceWorker.js","index.js"],"names":["RandImg","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","thunderFlash","img","myRef","current","state","clicked","style","setState","concat","Math","random","React","createRef","parRef","chiRef","running","createAnim","bind","assertThisInitialized","destroyAnim","thunderFlash1","checkFlash","num","setTimeout","myInterval","setInterval","par","chi","console","log","clientHeight","clearInterval","react_default","a","createElement","className","ref","src","alt","id","Component","FirstImg","ref1","ref2","checkFlash1","destroyAnim1","checkFlash2","destroyAnim2","myInterval2","App","position","switchPage","event","pos","target","value","panel","components_RandImg","components_FirstImg","onClick","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f8286d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/RandImg.css';\r\n\r\nclass RandImg extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.parRef = React.createRef();\r\n        this.chiRef = React.createRef();\r\n        this.state = {\r\n            clicked: false,\r\n            running: false\r\n        }\r\n        this.createAnim = this.createAnim.bind(this);\r\n        this.destroyAnim = this.destroyAnim.bind(this);\r\n        this.thunderFlash1 = this.thunderFlash1.bind(this);\r\n        this.checkFlash = this.checkFlash.bind(this);\r\n    }\r\n\r\n    createAnim() {\r\n        let img = this.myRef.current;\r\n        let num = Math.random();\r\n        img.style = `opacity: ${num};`;\r\n    }\r\n\r\n    destroyAnim() {\r\n        let img = this.myRef.current;\r\n        if (img != null) {\r\n            img.style = `opacity: 0.0`;\r\n        }\r\n    }\r\n\r\n    thunderFlash1() {\r\n        this.createAnim()\r\n        setTimeout(this.destroyAnim, 400);\r\n    }\r\n\r\n    checkFlash() {\r\n        let num = Math.random();\r\n        if (num > 0.5) {\r\n            let img = this.myRef.current;\r\n            img.style = `opacity: ${Math.random() * 0.25 + 0.75};`;\r\n            setTimeout(this.destroyAnim, 400);\r\n        }\r\n    }\r\n\r\n    thunderFlash = () => {\r\n        let img = this.myRef.current;\r\n        if (this.state.clicked) {\r\n            img.style = \"opacity: 0.0\";\r\n            this.setState({ clicked: false });\r\n        }\r\n        else {\r\n            img.style = `opacity: ${Math.random() * 0.25 + 0.75};`;\r\n            this.setState({ clicked: true });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({running: true});\r\n        this.myInterval = setInterval(this.checkFlash, 1000);\r\n        let par = this.parRef.current;\r\n        let chi = this.chiRef.current;\r\n        console.log(chi.clientHeight);\r\n\r\n        par.style = `height: ${chi.clientHeight};`\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({running: false})\r\n        clearInterval(this.myInterval);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"total-holder\">\r\n                <div className=\"Image-holder\" ref={this.parRef}>\r\n                    <div className=\"Image-positioner\" ref={this.chiRef}>\r\n                        <img src=\"Storm_test/Storm_test_1.png\" className=\"img-2\" alt=\"fail\" />\r\n                        <img src=\"Storm_test/Storm_test_2.png\" className=\"img-2\" alt=\"fail\" id=\"manip2\" ref={this.myRef} />\r\n                        <img src=\"Storm_test/Storm_test_4.png\" className=\"img-2\" alt=\"fail\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandImg;","import React from 'react';\r\nimport '../styles/RandImg.css';\r\n\r\nclass FirstImg extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref1 = React.createRef();\r\n        this.ref2 = React.createRef();\r\n        this.parRef = React.createRef();\r\n        this.checkFlash1 = this.checkFlash1.bind(this);\r\n        this.destroyAnim1 = this.destroyAnim1.bind(this);\r\n        this.checkFlash2 = this.checkFlash2.bind(this);\r\n        this.destroyAnim2 = this.destroyAnim2.bind(this);\r\n    }\r\n\r\n    checkFlash1() {\r\n        let num = Math.random();\r\n        \r\n        let img = this.ref1.current;\r\n        if (num > 0.5) {\r\n            img.style = `opacity: ${Math.random() * 0.25 + 0.75};`;\r\n        }\r\n        else {\r\n            img.style = `opacity: ${Math.random() * 0.25 + 0.5}`;\r\n        }\r\n        setTimeout(this.destroyAnim1, 400);\r\n    }\r\n\r\n    destroyAnim1() {\r\n        let img = this.ref1.current;\r\n        if (img != null) {\r\n            img.style = `opacity: 0.5`;\r\n        }\r\n    }\r\n\r\n    checkFlash2() {\r\n        let num = Math.random();\r\n        \r\n        let img = this.ref2.current;\r\n        if (num > 0.5) {\r\n            img.style = `opacity: ${Math.random() * 0.25 + 0.75};`;\r\n        }\r\n        else {\r\n            img.style = `opacity: ${Math.random() * 0.25 + 0.5}`;\r\n        }\r\n        setTimeout(this.destroyAnim2, 400);\r\n    }\r\n\r\n    destroyAnim2() {\r\n        let img = this.ref2.current;\r\n        if (img != null) {\r\n            img.style = `opacity: 0.5`;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let par = this.parRef.current;\r\n        let chi = this.ref1.current;\r\n\r\n        par.style = `height: ${chi.clientHeight};`\r\n        console.log(chi.clientHeight);\r\n\r\n        this.myInterval = setInterval(this.checkFlash1, 1000);\r\n        this.myInterval2 = setInterval(this.checkFlash2, 800);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval);\r\n        clearInterval(this.myInterval2);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Image-holder\"  ref={this.parRef}>\r\n                    <div className=\"Image-positioner\">\r\n                        <img src=\"test_first/test_page_1_1.png\" className=\"img-2\" alt=\"fail\" />\r\n                        <img src=\"test_first/test_page_1_2.png\" className=\"img-2\" alt=\"fail\" ref={this.ref1} />\r\n                        <img src=\"test_first/test_page_1_3.png\" className=\"img-2\" alt=\"fail\" ref={this.ref2} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FirstImg;","import React from 'react';\nimport './App.css';\nimport RandImg from './components/RandImg';\nimport FirstImg from './components/FirstImg';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: 0\n    }\n    this.switchPage = this.switchPage.bind(this);\n  }\n\n  switchPage(event) {\n    let pos = this.state.position;\n    if (event.target.value === \"Previous\") {\n      if (this.state.position > 0) {\n        this.setState({position: pos - 1});\n      }\n      else {\n        this.setState({position: 1});\n      }\n    }\n    else {\n      if (this.state.position < 1) {\n        this.setState({position: pos + 1});\n      }\n      else {\n        this.setState({position: 0});\n      }\n    }\n  }\n\n  render() {\n    let panel = <div></div>;\n    switch (this.state.position) {\n      case 0:\n        panel = <RandImg />;\n        break;\n      case 1:\n        panel = <FirstImg />;\n        break;\n      default:\n        panel = <RandImg />;\n        break;\n    }\n    return (\n      <div className=\"App\">\n        <div>\n          {panel}\n          <div className=\"btn-holder\">\n            <button className=\"btn\" value=\"Previous\" onClick={this.switchPage}>Previous</button>\n            <button className=\"btn\" value=\"Next\" onClick={this.switchPage}>Next</button>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}